apiVersion: v1
kind: ConfigMap
metadata:
  name: account-postgres-sink-config
  namespace: helium
data:
  config.json: |
    {
      "configs": [
        {
          "programId": "1atrmQs3eq1N2FEYWu6tyTXbCjP4uQwExpjtnhXtS8h",
          "accounts": [
            {
              "type": "LazyTransactionsV0",
              "table": "lazy_transactions",
              "schema": "public"
            },
            { "type": "Block", "table": "blocks", "schema": "public" }
          ]
        },
        {
          "programId": "hvsrNC3NKbcryqDs2DocYHZ9yPKEVzdSjQG6RVtK1s8",
          "accounts": [
            { "type": "PositionV0", "table": "positions", "schema": "public" },
            { "type": "Registrar", "table": "registrars", "schema": "public" }
          ]
        },
        {
          "programId": "hdaoVTCqhfHHo75XdAMxBKdUqvq1i5bF23sisBqVgGR",
          "accounts": [
            { "type": "DaoV0", "table": "daos", "schema": "public" },
            { "type": "SubDaoV0", "table": "sub_daos", "schema": "public" },
            {
              "type": "SubDaoEpochInfoV0",
              "table": "sub_dao_epoch_infos",
              "schema": "public"
            },
            {
              "type": "DaoEpochInfoV0",
              "table": "dao_epoch_infos",
              "schema": "public"
            },
            {
              "type": "DelegatedPositionV0",
              "table": "delegated_positions",
              "schema": "public"
            }
          ]
        },
        {
          "programId": "circAbx64bbsscPbQzZAUvuXpHqrCe6fLMzc2uKXz9g",
          "accounts": [
            {
              "type": "MintWindowedCircuitBreakerV0",
              "table": "mint_windowed_circuit_breaker_configs",
              "schema": "public"
            },
            {
              "type": "AccountWindowedCircuitBreakerV0",
              "table": "account_windowed_circuit_breaker_configs",
              "schema": "public"
            }
          ]
        },
        {
          "programId": "hemjuPXBpNvggtaUnN1MwT3wrdhttKEfosTcc2P9Pg8",
          "accounts": [
            {
              "type": "RewardableEntityConfigV0",
              "table": "rewardable_entity_configs",
              "schema": "public"
            },
            { "type": "MakerV0", "table": "makers", "schema": "public" },
            {
              "type": "MakerApprovalV0",
              "table": "maker_approvals",
              "schema": "public"
            },
            {
              "type": "KeyToAssetV0",
              "table": "key_to_assets",
              "schema": "public"
            },
            {
              "type": "IotHotspotInfoV0",
              "table": "iot_hotspot_infos",
              "schema": "public",
              "batchSize": 2500,
              "plugins": [
                {
                  "type": "ExtractHexLocation",
                  "config": {
                    "field": "location"
                  }
                }
              ]
            },
            {
              "type": "MobileHotspotInfoV0",
              "table": "mobile_hotspot_infos",
              "schema": "public",
              "batchSize": 2500,
              "plugins": [
                {
                  "type": "ExtractHexLocation",
                  "config": {
                    "field": "location"
                  }
                }
              ]
            }
          ]
        },
        {
          "programId": "1azyuavdMyvsivtNxPoz6SucD18eDHeXzFCUPq5XU7w",
          "accounts": [
            {
              "type": "LazyDistributorV0",
              "table": "lazy_distributors",
              "schema": "public"
            },
            { "type": "RecipientV0", "table": "recipients", "schema": "public" }
          ]
        }
      ]
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: account-postgres-sink-service
  name: account-postgres-sink-service
  namespace: helium
spec:
  selector:
    matchLabels:
      app: account-postgres-sink-service
  replicas: 1
  template:
    metadata:
      labels:
        app: account-postgres-sink-service
        security-group: public-rds-access
    spec:
      serviceAccountName: public-monitoring-rds-monitoring-user-access
      containers:
        - name: account-postgres-sink-service
          image: public.ecr.aws/v0j6k5v6/account-postgres-sink-service:0.0.51
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          env:
            - name: PGHOST
              value: monitoring-rds.cnigyps3bpgz.us-east-1.rds.amazonaws.com
            - name: PGPORT
              value: "5432"
            - name: PGUSER
              value: monitoring
            - name: AWS_REGION
              value: us-east-1
            - name: PGDATABASE
              value: monitoring
            - name: PGSSLMODE
              value: no-verify
            - name: MAPBOX_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: mapbox-api-key
                  key: mapbox-api-key
            - name: SOLANA_URL
              valueFrom:
                configMapKeyRef:
                  name: globals
                  key: solana_url
            - name: ASSET_API_URL
              valueFrom:
                configMapKeyRef:
                  name: globals
                  key: asset_api_url
            - name: PROGRAM_ACCOUNT_CONFIGS
              value: "/usr/src/app/config/config.json"
            - name: HELIUS_AUTH_SECRET
              valueFrom:
                secretKeyRef:
                  name: helius-auth-secret
                  key: secret
          volumeMounts:
            - name: account-postgres-sink-config
              mountPath: /usr/src/app/config
              readOnly: true
          resources:
            requests:
              cpu: 250m
              memory: 500Mi
            limits:
              memory: 2Gi
      volumes:
        - name: account-postgres-sink-config
          configMap:
            name: account-postgres-sink-config
            items:
              - key: config.json
                path: config.json
---
apiVersion: v1
kind: Service
metadata:
  name: account-postgres-sink-service
  namespace: helium
spec:
  ports:
    - port: 3000
      protocol: TCP
      targetPort: http
  selector:
    app: account-postgres-sink-service
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: account-postgres-sink-service
  namespace: helium
spec:
  ingressClassName: nginx
  rules:
    - host: account-sink.web.test-helium.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: account-postgres-sink-service
                port:
                  number: 3000
