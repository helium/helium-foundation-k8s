apiVersion: v1
kind: ConfigMap
metadata:
  name: account-postgres-sink-config
  namespace: helium
data:
  config.json: |
    {
      "configs": [
        {
          "programId": "hemjuPXBpNvggtaUnN1MwT3wrdhttKEfosTcc2P9Pg8",
          "accounts": [
            {
              "type": "KeyToAssetV0",
              "table": "key_to_assets",
              "schema": "public"
            },
            {
              "type": "IotHotspotInfoV0",
              "table": "iot_hotspot_infos",
              "schema": "public"
            },
            {
              "type": "MobileHotspotInfoV0",
              "table": "mobile_hotspot_infos",
              "schema": "public"
            }
          ],
          "crons": [
            { "schedule": "0 0 * * *", "type": "integrity-check" }
          ]
        },
        {
          "programId": "hexbnKYoA2GercNNhHUCCfrTRWrHjT6ujKPXTa5NPqJ",
          "accounts": [
            {
              "type": "BoostConfigV0",
              "table": "boost_configs",
              "schema": "public"
            },
            { "type": "BoostedHexV0", "table": "boosted_hexes", "schema": "public" }
          ],
          "crons": [
            { "schedule": "0 0 * * *", "type": "integrity-check" }
          ]
        }
      ]
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: account-postgres-sink-service
  name: account-postgres-sink-service
  namespace: helium
spec:
  selector:
    matchLabels:
      app: account-postgres-sink-service
  replicas: 1
  template:
    metadata:
      labels:
        app: account-postgres-sink-service
        security-group: rds-access
    spec:
      serviceAccountName: rds-metadata-user-access
      containers:
        - name: account-postgres-sink-service
          image: public.ecr.aws/v0j6k5v6/account-postgres-sink-service:0.1.21
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          env:
            - name: USE_KAFKA
              value: "true"
            - name: KAFKA_USER
              value: heliumConsumer
            - name: KAFKA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kafka-password
                  key: password
            - name: KAFKA_BROKERS
              value: b-1-public.shyftkafka.n40si4.c2.kafka.eu-central-1.amazonaws.com:9196,b-2-public.shyftkafka.n40si4.c2.kafka.eu-central-1.amazonaws.com:9196
            - name: KAFKA_GROUP_ID
              value: helium-oracle-prod-account-postgres-sink
            - name: KAFKA_TOPIC
              value: helium-accounts
            - name: RUN_JOBS_AT_STARTUP
              value: "true"
            - name: PGHOST
              value: oracle-rds.cjfnfp6fnm1y.us-west-2.rds.amazonaws.com
            - name: PGPORT
              value: "5432"
            - name: PGUSER
              value: metadata
            - name: AWS_REGION
              value: us-west-2
            - name: PGDATABASE
              value: metadata
            - name: PGSSLMODE
              value: no-verify
            - name: SOLANA_URL
              valueFrom:
                secretKeyRef:
                  name: helius-rpc-url
                  key: secret
            - name: ASSET_API_URL
              valueFrom:
                secretKeyRef:
                  name: helius-rpc-url
                  key: secret
            - name: PROGRAM_ACCOUNT_CONFIGS
              value: "/usr/src/app/config/config.json"
            - name: HELIUS_AUTH_SECRET
              valueFrom:
                secretKeyRef:
                  name: helius-auth-secret
                  key: secret
          volumeMounts:
            - name: account-postgres-sink-config
              mountPath: /usr/src/app/config
              readOnly: true
          resources:
            requests:
              cpu: 1000m
              memory: 2Gi
            limits:
              memory: 5Gi
      volumes:
        - name: account-postgres-sink-config
          configMap:
            name: account-postgres-sink-config
            items:
              - key: config.json
                path: config.json
---
apiVersion: v1
kind: Service
metadata:
  name: account-postgres-sink-service
  namespace: helium
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
spec:
  ports:
    - port: 3000
      protocol: TCP
      targetPort: http
  selector:
    app: account-postgres-sink-service
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: account-postgres-sink-service
  namespace: helium
spec:
  ingressClassName: nginx
  rules:
    - host: account-sink.oracle.helium.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: account-postgres-sink-service
                port:
                  number: 3000
